{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "txHash": "0x809aa66d2ed747ca81f04afd377d43873d8fcb0d380e3a006d94a1dfe56d5fd1",
      "kind": "uups"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0xc7d7a3350f35bfb4c39b519c2eb3927d996631bce1728027894a1dc4314989d6",
      "kind": "uups"
    },
    {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0xb335a150aac7ebc01e4d7b2216bad47e2d1b14ae522c3946005f5ee17c6e50aa",
      "kind": "uups"
    },
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x1153243019933a63546d55a5bf2c621c7f70702e3cc06400b40cff01668e9301",
      "kind": "uups"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0x62115b8776872689be64ecc79a8f6abe060dfee237613c3aeaaf735929ddfbfe",
      "kind": "uups"
    },
    {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x173ec404597857c2c04070acf692db7ed15b917fe7527ca87efbc8cd111cf0b9",
      "kind": "uups"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0x0a2639da34ba947df8fbeca43ba4808df05e2fd2d000405e81290f4cfb5206b6",
      "kind": "uups"
    },
    {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x856e22d0203c25d80b3036f61fe12364681c128c9176a70182c108323ce22772",
      "kind": "uups"
    },
    {
      "address": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
      "txHash": "0xb0fa1603efdfe3e777d7bd069adeb71f2178df72e51c97f7f1852f582a96be29",
      "kind": "uups"
    },
    {
      "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "txHash": "0x3a94eae08b046a15faf2999bf3647e626cce69cdd2b673a44de72419e6be3f29",
      "kind": "uups"
    },
    {
      "address": "0x9A9f2CCfdE556A7E9Ff0848998Aa4a0CFD8863AE",
      "txHash": "0xb091c96991a1a63788300473dd4f8e2da4306f71cd732af30d82766a7d2cc651",
      "kind": "uups"
    },
    {
      "address": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
      "txHash": "0xfff8a337a396cf1d988be8ab2afb5a269e75a98099ab727166e0113fc96e4f3a",
      "kind": "uups"
    },
    {
      "address": "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
      "txHash": "0xd7e13910bc98fbf1ffa59ef917d1194402647a67eb559c6f05bb5f71a21e2a24",
      "kind": "uups"
    },
    {
      "address": "0x4ed7c70F96B99c776995fB64377f0d4aB3B0e1C1",
      "txHash": "0xc2230e11cb29ed585a89fc3075692c6e77b9912e0db4610bc3190fdbd5b27335",
      "kind": "uups"
    },
    {
      "address": "0x4A679253410272dd5232B3Ff7cF5dbB88f295319",
      "txHash": "0xc23b22507fc5c1d5473eac893eb9ac984781fc6c793c936946ef08af0deace4b",
      "kind": "uups"
    }
  ],
  "impls": {
    "68e0eccad7938dc8c4f8b871af79c547de55592514950c3400c93e48c5f5f779": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0xee2a4679381803fe596cadad4621ab3ce20c9a0de29702ddca667816892f7de4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "VolcanoCoin2",
            "label": "paymentId",
            "type": "t_uint256",
            "src": "contracts/VolcanoCoin2.sol:10"
          },
          {
            "contract": "VolcanoCoin2",
            "label": "payments",
            "type": "t_mapping(t_address,t_array(t_struct(Payment)1791_storage)dyn_storage)",
            "src": "contracts/VolcanoCoin2.sol:13"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_struct(Payment)1791_storage)dyn_storage)": {
            "label": "mapping(address => struct VolcanoCoin2.Payment[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Payment)1791_storage)dyn_storage": {
            "label": "struct VolcanoCoin2.Payment[]"
          },
          "t_struct(Payment)1791_storage": {
            "label": "struct VolcanoCoin2.Payment",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "paymentType",
                "type": "t_enum(PaymentType)1777"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "comment",
                "type": "t_string_storage"
              }
            ]
          },
          "t_enum(PaymentType)1777": {
            "label": "enum VolcanoCoin2.PaymentType",
            "members": [
              "UNKNOWN",
              "BASIC_PAYMENT",
              "REFUND",
              "DIVIDEND",
              "GROUP_PAYMENT"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7eb5c4a43f4ad21b20924b34d50e718a95b7e6cdc58895b87a5483ce5c2a4c39": {
      "address": "0x7a2088a1bFc9d81c55368AE168C2C02570cB814F",
      "txHash": "0x655083abcc4e97b22a575c546c8ea9d6ece74e21f434d49f179bf6c47f4af039",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "VolcanoCoin2",
            "label": "paymentId",
            "type": "t_uint256",
            "src": "contracts/VolcanoCoin2.sol:10"
          },
          {
            "contract": "VolcanoCoin2",
            "label": "payments",
            "type": "t_mapping(t_address,t_array(t_struct(Payment)1791_storage)dyn_storage)",
            "src": "contracts/VolcanoCoin2.sol:13"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_struct(Payment)1791_storage)dyn_storage)": {
            "label": "mapping(address => struct VolcanoCoin2.Payment[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Payment)1791_storage)dyn_storage": {
            "label": "struct VolcanoCoin2.Payment[]"
          },
          "t_struct(Payment)1791_storage": {
            "label": "struct VolcanoCoin2.Payment",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "recipient",
                "type": "t_address"
              },
              {
                "label": "paymentType",
                "type": "t_enum(PaymentType)1777"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "comment",
                "type": "t_string_storage"
              }
            ]
          },
          "t_enum(PaymentType)1777": {
            "label": "enum VolcanoCoin2.PaymentType",
            "members": [
              "UNKNOWN",
              "BASIC_PAYMENT",
              "REFUND",
              "DIVIDEND",
              "GROUP_PAYMENT"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
